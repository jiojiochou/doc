(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{696:function(_,v,t){"use strict";t.r(v);var a=t(16),s=Object(a.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"http"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[_._v("#")]),_._v(" HTTP")]),_._v(" "),t("h2",{attrs:{id:"_1、get进而post的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、get进而post的区别"}},[_._v("#")]),_._v(" 1、GET进而POST的区别？")]),_._v(" "),t("ul",[t("li",[_._v("**幂等：**前者幂等，后者非幂等（幂等指的是一次请求和多次请求的效果相同）")]),_._v(" "),t("li",[_._v("**应用场景：**前者用来获取资源，后者用来提交资源")]),_._v(" "),t("li",[_._v("**缓存：**前者一般会做缓存，后者不做缓存")]),_._v(" "),t("li",[_._v("**传参：**前者只能传字符串拼接，后者可以请求体、字符串拼接")]),_._v(" "),t("li",[_._v("**安全性：**都不安全")]),_._v(" "),t("li",[_._v("**传参长度：**由于前者传参是url拼接，所以会因为浏览器限制url长度，而导致传参长度被限制")]),_._v(" "),t("li",[_._v("**参数类型：**前者只允许传ASCII字符，后者支持文件、图片、表单、JSON等")])]),_._v(" "),t("h2",{attrs:{id:"post和put的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#post和put的区别"}},[_._v("#")]),_._v(" POST和PUT的区别")]),_._v(" "),t("p",[t("code",[_._v("POST")]),_._v("一般用来提交新数据，"),t("code",[_._v("PUT")]),_._v("一般用来修改数据")]),_._v(" "),t("h2",{attrs:{id:"_3、常见http请求头"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、常见http请求头"}},[_._v("#")]),_._v(" 3、常见HTTP请求头")]),_._v(" "),t("h3",{attrs:{id:"请求头"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#请求头"}},[_._v("#")]),_._v(" 请求头")]),_._v(" "),t("ul",[t("li",[_._v("**Accept：**浏览器能够处理的内容类型")]),_._v(" "),t("li",[_._v("**Accept-Charset：**浏览器能够显示的字符集")]),_._v(" "),t("li",[_._v("**Accept-Encoding：**浏览器能够处理的压缩编码")]),_._v(" "),t("li",[_._v("**Accept-Language：**浏览器当前设置的语言")]),_._v(" "),t("li",[_._v("**Connection：**浏览器与服务区之间的连接类型")]),_._v(" "),t("li",[_._v("**Cookie：**当前页面设置的Cookie")]),_._v(" "),t("li",[_._v("**Host：**发送请求的域名")]),_._v(" "),t("li",[_._v("**Referer：**发送请求的页面URL")]),_._v(" "),t("li",[_._v("**User-Agent：**浏览器的用户代理字符串")])]),_._v(" "),t("h3",{attrs:{id:"响应头"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#响应头"}},[_._v("#")]),_._v(" 响应头")]),_._v(" "),t("ul",[t("li",[_._v("**Date：**消息发送的时间")]),_._v(" "),t("li",[_._v("**server：**服务器名称")]),_._v(" "),t("li",[_._v("**Connection：**浏览器与服务器之间的连接类型")]),_._v(" "),t("li",[_._v("**Cache-Control：**HTTP强缓存")]),_._v(" "),t("li",[_._v("**Content-Type：**数据类型")])]),_._v(" "),t("h2",{attrs:{id:"_4、页面有多张图片-http怎么加载表现的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、页面有多张图片-http怎么加载表现的"}},[_._v("#")]),_._v(" 4、页面有多张图片，HTTP怎么加载表现的")]),_._v(" "),t("p",[_._v("HTTP1时期，最大TCP连接数只能为6，所以会请求多次")]),_._v(" "),t("p",[_._v("HTTP2时期，支持多路复用，可以一瞬间加载出来，牛逼！")]),_._v(" "),t("h2",{attrs:{id:"_5、说说状态码304"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、说说状态码304"}},[_._v("#")]),_._v(" 5、说说状态码304")]),_._v(" "),t("p",[_._v("协商缓存命中时返回"),t("code",[_._v("304")])]),_._v(" "),t("h2",{attrs:{id:"_6、常见的http请求方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、常见的http请求方法"}},[_._v("#")]),_._v(" 6、常见的HTTP请求方法")]),_._v(" "),t("ul",[t("li",[_._v("**GET：**获取资源")]),_._v(" "),t("li",[_._v("**POST：**提交资源")]),_._v(" "),t("li",[_._v("**PUT：**提交并修改资源")]),_._v(" "),t("li",[_._v("**PATCH：**对资源部分修改")]),_._v(" "),t("li",[_._v("**OPTIONS：**探头，用来探测是否支持请求方法、跨域、安全")]),_._v(" "),t("li",[_._v("**CONNECT：**与代理服务器建立管道，使用管道进行TCP通信")]),_._v(" "),t("li",[_._v("**TRACE：**让服务器原样返回客户端的请求信息内容，用于测试或诊断")])]),_._v(" "),t("h2",{attrs:{id:"_7、http1-0与http1-1的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7、http1-0与http1-1的区别"}},[_._v("#")]),_._v(" 7、HTTP1.0与HTTP1.1的区别")]),_._v(" "),t("ul",[t("li",[_._v("**连接：**1.0非持久连接，1.1持久连接，多个http请求可复用同一个TCP连接")]),_._v(" "),t("li",[_._v("**资源请求：**1.1引入了range头，允许只请求资源的某个部分")]),_._v(" "),t("li",[_._v("**缓存：**1.0使用"),t("code",[_._v("Expire、If-Modified-Since")]),_._v("来当做缓存投；1.1使用"),t("code",[_._v("Etag、If-None-Match、If-Match")])]),_._v(" "),t("li",[_._v("**Host：**1.1新赠Host请求头，用来表示请求服务器的域名")]),_._v(" "),t("li",[_._v("**方法：**1.1新增"),t("code",[_._v("PUT、HEAD、OPTIONS")]),_._v("等方法")])]),_._v(" "),t("h2",{attrs:{id:"_8、http1-1与http2-0的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8、http1-1与http2-0的区别"}},[_._v("#")]),_._v(" 8、HTTP1.1与HTTP2.0的区别")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("二进制协议："),t("strong",[_._v("2.0头信息和数据体都是二进制，统称为“帧”，是")]),_._v("多路复用")]),_._v("的基础")]),_._v(" "),t("li",[t("strong",[_._v("多路复用："),t("strong",[_._v("2.0复用TCP连接，同一个TCP连接中，可发多个请求或回应，这就解决了")]),_._v("队头阻塞")]),_._v("问题")]),_._v(" "),t("li",[_._v("**数据流：**2.0将每个请求或回应的所有数据包统称为一个数据流，每一个数据流都有独一无二的编号ID，用于数据传输时的区分")]),_._v(" "),t("li",[t("strong",[_._v("头信息压缩："),t("strong",[_._v("2.0维护一张")]),_._v("头信息表")]),_._v("，所有头字段信息都会记录在这张表里，发送时只需要发送对应的key就行，大大节省空间。为啥这么做呢？你想想，如果多个header内容都一样，照样发送的话，是不是很浪费空间")]),_._v(" "),t("li",[_._v("**服务器推送：**2.0可提前向客户端推送静态资源，这样客户端页面的加载延迟就会大大减少")])]),_._v(" "),t("h2",{attrs:{id:"_9、队头阻塞是啥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9、队头阻塞是啥"}},[_._v("#")]),_._v(" 9、队头阻塞是啥")]),_._v(" "),t("h3",{attrs:{id:"是啥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#是啥"}},[_._v("#")]),_._v(" 是啥？")]),_._v(" "),t("p",[_._v("你可以理解为，以前的HTTP请求都是"),t("strong",[_._v("一发一收")]),_._v("的模式，有点类似于"),t("strong",[_._v("串行")]),_._v("，也就是排队。那如果有多个请求并发的话，那就需要等待很久啊。")]),_._v(" "),t("h3",{attrs:{id:"解决"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决"}},[_._v("#")]),_._v(" 解决？")]),_._v(" "),t("ul",[t("li",[_._v("**并发连接：**串行变并行，提升总体请求速度")]),_._v(" "),t("li",[_._v("**域名分片：**域名分出很多二级域名，这样可并发的数量就变多了，也就提升了总体请求速度")])]),_._v(" "),t("h2",{attrs:{id:"_10、http和https的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10、http和https的区别"}},[_._v("#")]),_._v(" 10、HTTP和HTTPS的区别")]),_._v(" "),t("p",[t("strong",[_._v("HTTPS = HTTP + SSL")]),_._v("，涉及到"),t("code",[_._v("对称加密、非对称加密、证书")])]),_._v(" "),t("p",[_._v("详细文章：https://juejin.cn/post/7042158171778973732")]),_._v(" "),t("h2",{attrs:{id:"_11、页面从输入url后发生啥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11、页面从输入url后发生啥"}},[_._v("#")]),_._v(" 11、页面从输入URL后发生啥")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("解析URL为IP")]),_._v("：走的是DNS解析那一套，依次寻找浏览器缓存、本地DNS服务器、根域名DNS服务器、权威DNS服务器，直到寻找到IP，并缓存在浏览器缓存")]),_._v(" "),t("li",[_._v("**TCP三次握手：**确保客户端和服务端之间的连通性")]),_._v(" "),t("li",[_._v("**发送HTTP请求：**发送请求报文")]),_._v(" "),t("li",[t("strong",[_._v("页面渲染："),t("strong",[_._v("HTML解析器和CSS解析器并行构建")]),_._v("DOM树")]),_._v("和"),t("strong",[_._v("CSS树")]),_._v("，然后结合成"),t("strong",[_._v("CSSOM树")]),_._v("，JS引擎运行JS代码，进行DOM的操作或修改。然后进行UI布局、绘制，进而将整个页面渲染出来")]),_._v(" "),t("li",[_._v("**TCP四次挥手：**客户端和服务端断开连接")])]),_._v(" "),t("h2",{attrs:{id:"_12、什么是websocket"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12、什么是websocket"}},[_._v("#")]),_._v(" 12、什么是WebSocket")]),_._v(" "),t("p",[t("code",[_._v("WebSocket")]),_._v("是一种网络通信协议，是在TCP连接上进行全双工通信的协议。")]),_._v(" "),t("p",[t("code",[_._v("Websocket")]),_._v("可以实现客户端和服务端之间进行全双工通信，任何一方都可以通过简历连接将数据传到另一端，它只需要建立一次连接，就可以一直保持连接状态")]),_._v(" "),t("h2",{attrs:{id:"_13、http状态码有哪些状态码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_13、http状态码有哪些状态码"}},[_._v("#")]),_._v(" 13、HTTP状态码有哪些状态码")]),_._v(" "),t("ul",[t("li",[_._v("**1XX：**信息类状态码")]),_._v(" "),t("li",[_._v("**2XX：**成功状态码")]),_._v(" "),t("li",[_._v("**3XX：**重定向状态码")]),_._v(" "),t("li",[_._v("**4XX：**请求错误状态码")]),_._v(" "),t("li",[_._v("**5XX：**服务端错误状态码")])]),_._v(" "),t("h3",{attrs:{id:"_2xx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2xx"}},[_._v("#")]),_._v(" 2XX")]),_._v(" "),t("ul",[t("li",[_._v("**200：**成功处理请求")]),_._v(" "),t("li",[_._v("**201：**成功创建，一般应用在POST")]),_._v(" "),t("li",[_._v("**202：**服务端接收请求，但尚未处理，不保证完成请求")]),_._v(" "),t("li",[_._v("**204：**请求成功，但是相应爆文不含实体的主体部分")])]),_._v(" "),t("h3",{attrs:{id:"_3xx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3xx"}},[_._v("#")]),_._v(" 3XX")]),_._v(" "),t("ul",[t("li",[_._v("**301：**永久性重定向")]),_._v(" "),t("li",[_._v("**302：**临时重定向")]),_._v(" "),t("li",[_._v("**304：**协商缓存命中")])]),_._v(" "),t("h3",{attrs:{id:"_4xx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4xx"}},[_._v("#")]),_._v(" 4XX")]),_._v(" "),t("ul",[t("li",[_._v("**400：**请求内容存在语法错误")]),_._v(" "),t("li",[_._v("**401：**请求无权限")]),_._v(" "),t("li",[_._v("**403：**请求资源被服务端拒绝")]),_._v(" "),t("li",[_._v("**404：**无法找到请求的资源")])]),_._v(" "),t("h3",{attrs:{id:"_5xx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5xx"}},[_._v("#")]),_._v(" 5XX")]),_._v(" "),t("ul",[t("li",[_._v("**500：**服务器报错")]),_._v(" "),t("li",[_._v("**501：**服务端不支持当前请求所需要的某个功能")]),_._v(" "),t("li",[_._v("**503：**服务器暂时处于超负载或停机维护，无法处理请求")])]),_._v(" "),t("h2",{attrs:{id:"_14、什么是dns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_14、什么是dns"}},[_._v("#")]),_._v(" 14、什么是DNS")]),_._v(" "),t("p",[t("code",[_._v("DNS（Domain Name System）域名系统")]),_._v("，他的作用，简单来说就是"),t("strong",[_._v("把请求域名转换成IP")])]),_._v(" "),t("h2",{attrs:{id:"_15、dns的查询ip过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_15、dns的查询ip过程"}},[_._v("#")]),_._v(" 15、DNS的查询IP过程")]),_._v(" "),t("ul",[t("li",[_._v("1、先在"),t("strong",[_._v("浏览器缓存")]),_._v("中查找IP地址，查到直接返回，不走下一步")]),_._v(" "),t("li",[_._v("2、在"),t("strong",[_._v("本地DNS服务器")]),_._v("中查找IP，查到直接返回，不走下一步")]),_._v(" "),t("li",[_._v("3、本地DNS服务器向"),t("strong",[_._v("根域名服务器")]),_._v("发送请求，并在其中查找IP，查到直接返回，不走下一步")]),_._v(" "),t("li",[_._v("4、本地DNS服务器向"),t("strong",[_._v("权威域名服务器")]),_._v("发送请求并查找IP，返回对应结果")]),_._v(" "),t("li",[_._v("5、本地DNS服务器接收到结果，并"),t("strong",[_._v("缓存")]),_._v("，供下次查找使用")]),_._v(" "),t("li",[_._v("6、本地DNS服务器将接收到结果返回给浏览器")])]),_._v(" "),t("h2",{attrs:{id:"_16、tcp的三次握手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_16、tcp的三次握手"}},[_._v("#")]),_._v(" 16、TCP的三次握手")]),_._v(" "),t("ul",[t("li",[_._v("**第一次握手：**客户端向服务端发送请求报文段，此报文段中包含自身数据通讯初始序号。客户端进入SYN-SENT状态")]),_._v(" "),t("li",[_._v("**第二次握手：**服务端接收到报文后，同意链接，发送应答，此应答也包含自身数据通讯初始序号，发送完后进入SYN-RECEVED状态")]),_._v(" "),t("li",[_._v("**第三次握手：**客户端收到同意连接的应答，向服务端发送确认报文。双方同时进入ESTABLISHED状态，连接成功建立")])]),_._v(" "),t("h2",{attrs:{id:"_17、tcp的四次挥手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17、tcp的四次挥手"}},[_._v("#")]),_._v(" 17、TCP的四次挥手")]),_._v(" "),t("ul",[t("li",[_._v("**第一次挥手：**客户端认为数据发送完成后，向服务端发送连接释放请求")]),_._v(" "),t("li",[_._v("**第二次挥手：**服务端收到释放请求后，确认不再接收客户端发送的数据")]),_._v(" "),t("li",[_._v("**第三次挥手：**如果服务端此时还有没发完的数据会继续发送，发送完后，服务端向客户端发送连接释放请求")]),_._v(" "),t("li",[_._v("**第四次挥手：**客户端收到释放请求后，向服务端发送确认应答，正式断开连接")])]),_._v(" "),t("h2",{attrs:{id:"_18、token是啥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_18、token是啥"}},[_._v("#")]),_._v(" 18、Token是啥")]),_._v(" "),t("h3",{attrs:{id:"是啥-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#是啥-2"}},[_._v("#")]),_._v(" 是啥？")]),_._v(" "),t("p",[t("code",[_._v("Token（令牌）")]),_._v("，一般由"),t("code",[_._v("uid + time +sign + 固定参数")]),_._v("组成")]),_._v(" "),t("ul",[t("li",[_._v("**uid：**用户唯一身份标识")]),_._v(" "),t("li",[_._v("**time：**当前时间戳")]),_._v(" "),t("li",[_._v("**sign：**签名")]),_._v(" "),t("li",[_._v("**固定参数：**可选，一些自定义的字符串")])]),_._v(" "),t("h3",{attrs:{id:"获取token过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获取token过程"}},[_._v("#")]),_._v(" 获取Token过程？")]),_._v(" "),t("ul",[t("li",[_._v("1、用户登录，服务端生成Token返回给客户端")]),_._v(" "),t("li",[_._v("2、客户端把Token保存在浏览器缓存中")]),_._v(" "),t("li",[_._v("3、客户端发送请求时把Token放在header中")]),_._v(" "),t("li",[_._v("4、服务端收到Token后，判断Tokne的准确性和时效性，通过就返回对应数据，不通过就返回401")])]),_._v(" "),t("h3",{attrs:{id:"作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[_._v("#")]),_._v(" 作用？")]),_._v(" "),t("ul",[t("li",[_._v("抵抗CSRF")]),_._v(" "),t("li",[_._v("节省后端存储空间")])]),_._v(" "),t("h2",{attrs:{id:"_19、如何无感刷新token"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_19、如何无感刷新token"}},[_._v("#")]),_._v(" 19、如何无感刷新Token")]),_._v(" "),t("p",[_._v("在响应拦截器中拦截401，并判断Token过期，调用刷新Token的接口，重置Token，实现无感刷新")]),_._v(" "),t("h2",{attrs:{id:"_20、跨域报错的时机"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20、跨域报错的时机"}},[_._v("#")]),_._v(" 20、跨域报错的时机")]),_._v(" "),t("p",[_._v("客户端请求完服务端，服务端返回数据，到达浏览器时，报跨域错误")]),_._v(" "),t("h2",{attrs:{id:"_21、跨域的解决方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_21、跨域的解决方案"}},[_._v("#")]),_._v(" 21、跨域的解决方案")]),_._v(" "),t("ul",[t("li",[_._v("**JSONP：**只适用于GET请求，已被淘汰")]),_._v(" "),t("li",[_._v("**Node中间件代理：**跨域只是对于客户端的限制，但是不对服务端限制，所以可以先把接口发到代理服务端，然后转发到目标服务端")]),_._v(" "),t("li",[_._v("**Nginx反向代理：**类似于Node中间件转发，只不过这里是Nginx代理")]),_._v(" "),t("li",[_._v("**Cors：**后端开启Cors（Cross Orgin Resource Share）")])]),_._v(" "),t("h2",{attrs:{id:"_22、xss和csrf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_22、xss和csrf"}},[_._v("#")]),_._v(" 22、XSS和CSRF")]),_._v(" "),t("h3",{attrs:{id:"xss"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xss"}},[_._v("#")]),_._v(" XSS")]),_._v(" "),t("h4",{attrs:{id:"是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#是什么"}},[_._v("#")]),_._v(" 是什么")]),_._v(" "),t("p",[t("code",[_._v("跨域脚本攻击")]),_._v("，一般指的是有人往网站注入恶意脚本，使之在网页中运行，从而盗取cookie等信息")]),_._v(" "),t("p",[_._v("可达到以下攻击：")]),_._v(" "),t("ul",[t("li",[_._v("获取页面数据，如DOM、cookie、LocalStorage")]),_._v(" "),t("li",[_._v("DOS攻击，发送合理请求，占用服务器资源，使用户无法正常访问服务器")]),_._v(" "),t("li",[_._v("破坏页面结构")]),_._v(" "),t("li",[_._v("流量劫持（将链接指向某网站）")])]),_._v(" "),t("h4",{attrs:{id:"防御"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#防御"}},[_._v("#")]),_._v(" 防御")]),_._v(" "),t("p",[_._v("对存储到后端的数据进行转义，禁止"),t("code",[_._v("script")]),_._v("这种类似的脚本数据存储")]),_._v(" "),t("h3",{attrs:{id:"csrf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#csrf"}},[_._v("#")]),_._v(" CSRF")]),_._v(" "),t("h4",{attrs:{id:"是什么-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#是什么-2"}},[_._v("#")]),_._v(" 是什么?")]),_._v(" "),t("p",[t("code",[_._v("跨站请求伪造")]),_._v("，攻击者诱导用户进入一个第三方网站，然后在第三方网站发送请求，同时会带走用户现有的登录状态，从而冒充用户执行请求操作")]),_._v(" "),t("p",[_._v("本质是利用Cookie会在同源请求中携带发送给服务器的特点，以此来实现用户的冒充")]),_._v(" "),t("h4",{attrs:{id:"防御-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#防御-2"}},[_._v("#")]),_._v(" 防御")]),_._v(" "),t("ul",[t("li",[_._v("**同源检测：**服务端对请求头中的origin和referer进行检测，但是这两个字段也可以伪造")]),_._v(" "),t("li",[_._v("**使用Token：**Token与Cookie不同的就是，Token是可以用户选择性发送，Cookie是主动携带")]),_._v(" "),t("li",[_._v("**Samesite：**设置Cookie的Samesite为严格模式，限制不被第三方网站使用Samesite")])]),_._v(" "),t("h2",{attrs:{id:"_23、如何优化seo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_23、如何优化seo"}},[_._v("#")]),_._v(" 23、如何优化SEO")]),_._v(" "),t("p",[_._v("提高网站权重，增强搜索引擎友好度")]),_._v(" "),t("ul",[t("li",[_._v("网站层级不要太深")]),_._v(" "),t("li",[_._v("合理使用语义化HTML标签")]),_._v(" "),t("li",[_._v("服务端渲染")]),_._v(" "),t("li",[_._v("减少HTTP请求，提升网站加载速度")])])])}),[],!1,null,null,null);v.default=s.exports}}]);